name: Test SSH Connection to VPS

# Allow manual triggering of the workflow
on:
  workflow_dispatch:

jobs:
  test-ssh:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write

    steps:
      # Step 1: Checkout the repository (optional, but often included)
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Setup SSH keys and known_hosts, and log each step
      # - name: Setup SSH and Log Output
      #   run: |
      #     mkdir -p ~/.ssh/
      #     echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
      #     echo "Private key saved to ~/.ssh/id_rsa"
      #     chmod 600 ~/.ssh/id_rsa
      #     echo "Permissions set for private key"

      #     ssh-keyscan -H ${{ secrets.VPS_HOST }} >> ~/.ssh/known_hosts
      #     echo "Host key added to known_hosts for ${{ secrets.VPS_HOST }}"

      #     echo "Contents of known_hosts:"
      #     cat ~/.ssh/known_hosts

      # Step 3: Test SSH connection to VPS
      # - name: Test SSH Connection
      #   uses: appleboy/ssh-action@v0.1.0
      #   with:
      #     host: ${{ secrets.VPS_HOST }}
      #     username: ${{ secrets.VPS_USER }}
      #     key: ${{ secrets.SSH_PRIVATE_KEY }}
      #     script: |
      #       echo "SSH connection successful to ${{ secrets.VPS_HOST }} as ${{ secrets.VPS_USER }}"

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.VPS_HOST }} >> ~/.ssh/known_hosts

      - name: Test SSH Connection
        run: |
          ssh -i ~/.ssh/id_rsa ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "echo 'SSH connection successful'"
